---------------------------------------------------------------------------
IndexError                                Traceback (most recent call last)
Cell In[27], line 2
      1 # declare the model
----> 2 model = build_model(input_shape,
      3                     head_size,
      4                     num_heads,
      5                     ff_dim,
      6                     num_transformer_blocks,
      7                     mlp_units,
      8                     dropout,
      9                     mlp_dropout)

Cell In[25], line 14, in build_model(input_shape, head_size, num_heads, ff_dim, num_transformer_blocks, mlp_units, dropout, mlp_dropout)
     12 enc_output = x  # Output from the Encoder
     13 for _ in range(num_transformer_blocks):
---> 14     x = transformer_decoder(x, enc_output, head_size, num_heads, ff_dim, dropout)
     16 # FFN
     17 for dim in mlp_units:

Cell In[24], line 3, in transformer_decoder(inputs, enc_output, head_size, num_heads, ff_dim, dropout)
      2 def transformer_decoder(inputs, enc_output, head_size, num_heads, ff_dim, dropout=0):
----> 3     x = layers.MultiHeadAttention(key_dim=head_size, num_heads=num_heads, dropout=dropout)(inputs, inputs)
      4     x = layers.Dropout(dropout)(x)
      5     x = layers.LayerNormalization(epsilon=1e-6)(x)

File /Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/keras/src/utils/traceback_utils.py:70, in filter_traceback.<locals>.error_handler(*args, **kwargs)
     67     filtered_tb = _process_traceback_frames(e.__traceback__)
     68     # To get the full stack trace, call:
     69     # `tf.debugging.disable_traceback_filtering()`
---> 70     raise e.with_traceback(filtered_tb) from None
     71 finally:
     72     del filtered_tb

File /Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/keras/src/layers/activation/softmax.py:107, in Softmax.call(self, inputs, mask)
    102         return tf.exp(
    103             inputs
    104             - tf.reduce_logsumexp(inputs, axis=self.axis, keepdims=True)
    105         )
    106     else:
--> 107         return backend.softmax(inputs, axis=self.axis[0])
    108 return backend.softmax(inputs, axis=self.axis)

IndexError: Exception encountered when calling layer 'softmax' (type Softmax).

tuple index out of range

Call arguments received by layer 'softmax' (type Softmax):
  • inputs=tf.Tensor(shape=(None, 8), dtype=float32)
  • mask=None
